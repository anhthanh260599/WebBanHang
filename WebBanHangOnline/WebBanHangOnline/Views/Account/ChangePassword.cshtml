@model WebBanHangOnline.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Đổi mật khẩu";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" type="text/css" href="~/Content/assets/styles/main_styles.css">

<style>
    .validation-icon .fa-check {
        color: green;
    }

    .validation-icon .fa-times {
        color: red;
    }

    .password-eye::before {
        position: absolute;
        top: 12px;
        right: 32px;
    }
</style>

<div class="container" style="margin-top:200px;">

    <h2>Đổi mật khẩu</h2>

    @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })

        <div class="form-group">
            @*@Html.LabelFor(model => model.OldPassword, new { @class = "col-md-2 control-label" })*@
            <label class="col-md-2 control-label">Mật khẩu hiện tại</label>
            <div class="col-md-10">
                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.NewPassword, new { @class = "col-md-2 control-label" })*@
            <label class="col-md-2 control-label">Mật khẩu mới</label>
            <div class="col-md-10">
                @*@Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })*@
                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", oninput = "validatePassword(this.value)", @id = "passwordInput" })
                <span toggle="#passwordInput" class="fa fa-fw fa-eye field-icon password-eye toggle-password"></span>

                <div id="password-requirements">
                    <div id="length-requirement" class="requirement"><i class="text-danger fas fa-times"></i> Mật khẩu phải ít nhất 8 ký tự.</div>
                    <div id="lowercase-requirement" class="requirement"><i class="text-danger fas fa-times"></i> Mật khẩu phải có ít nhất 1 chữ thường (a-z).</div>
                    <div id="uppercase-requirement" class="requirement"><i class="text-danger fas fa-times"></i> Mật khẩu phải có ít nhất 1 chữ hoa (A-Z).</div>
                    <div id="specialchar-requirement" class="requirement"><i class="text-danger fas fa-times"></i> Mật khẩu phải chứa ký tự đặc biệt.</div>
                </div>
                <span id="validation-icon" class="validation-icon text-danger"><i class="fas fa-times"></i> Mật khẩu chưa hợp lệ</span>
            </div>
        </div>

        <div class="form-group">
            <label class="col control-label">Xác nhận mật khẩu mới</label>
            @*@Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-2 control-label" })*@
            <div class="col-md-10">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @id = "confirmPasswordInput" })
                <span toggle="#confirmPasswordInput" class="fa fa-fw fa-eye field-icon password-eye toggle-password"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Đổi mật khẩu" class="btn btn-default" />
            </div>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function validatePassword(password) {
            const lengthCheck = password.length >= 8;
            const lowercaseCheck = /[a-z]/.test(password);
            const uppercaseCheck = /[A-Z]/.test(password);
            const specialCharCheck = /[!@@#$%^&*(),.?":{}|<>]/.test(password);

            document.getElementById('length-requirement').innerHTML = lengthCheck ? '<i class="text-success fas fa-check"></i> Mật khẩu phải ít nhất 8 ký tự.' : ' <i class="text-danger fas fa-times"></i> Mật khẩu phải ít nhất 8 ký tự.';
            document.getElementById('lowercase-requirement').innerHTML = lowercaseCheck ? '<i class="text-success fas fa-check"></i> Mật khẩu phải có ít nhất 1 chữ thường (a-z).' : '<i class="text-danger fas fa-times"></i> Mật khẩu phải có ít nhất 1 chữ thường (a-z).';
            document.getElementById('uppercase-requirement').innerHTML = uppercaseCheck ? '<i class="text-success fas fa-check"></i> Mật khẩu phải có ít nhất 1 chữ hoa (A-Z).' : '<i class="text-danger fas fa-times"></i> Mật khẩu phải có ít nhất 1 chữ hoa (A-Z).';
            document.getElementById('specialchar-requirement').innerHTML = specialCharCheck ? '<i class="text-success fas fa-check"></i> Mật khẩu phải chứa ký tự đặc biệt.' : '<i class="text-danger fas fa-times"></i> Mật khẩu phải chứa ký tự đặc biệt.';

            const isValid = lengthCheck && lowercaseCheck && uppercaseCheck && specialCharCheck;
            const validationIcon = document.getElementById('validation-icon');

            if (isValid) {
                validationIcon.classList.remove("text-danger");
                validationIcon.classList.add("text-success");
                validationIcon.innerHTML = '<i class="text-success fas fa-check"></i> Mật khẩu hợp lệ';
                validationIcon.style.color = 'green';
            } else {
                validationIcon.classList.remove("text-success");
                validationIcon.classList.add("text-danger");
                validationIcon.innerHTML = '<i class="text-danger fas fa-times"></i> Mật khẩu chưa hợp lệ';
                validationIcon.style.color = 'red';
            }
        }

        $(document).ready(function () {
            $(".toggle-password").click(function () {
                $(this).toggleClass('fa-eye fa-eye-slash');
                var input = $($(this).attr('toggle'));
                if (input.attr("type") == "password") {
                    input.attr("type", "text");
                }
                else {
                    input.attr("type", "password");
                }
            });
        })
    </script>
}