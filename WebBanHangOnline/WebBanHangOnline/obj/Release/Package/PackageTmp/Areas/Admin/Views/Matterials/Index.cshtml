@model IEnumerable<WebBanHangOnline.Models.EF.Matterial>
@using WebBanHangOnline.Models.Common

@{
    ViewBag.Title = "Danh sách nguyên liệu";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader {
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/Matterials" class="nav-link">nguyên liệu</a>
        </li>
    </ul>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Quản lý nguyên liệu</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
                    <li class="breadcrumb-item active">nguyên liệu</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">@ViewBag.Title</h3>

            <div class="card-tools">
                <a href="/admin/Matterials/add" class="btn btn-primary">Thêm mới</a>
                <a href="#" id="btnDeleteSelected" class="btn btn-danger">Xoá các mục đã chọn</a>

                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                    <i class="fas fa-minus"></i>
                </button>
            </div>
        </div>

        <div class="card-body">
            <table class="table table-hover" id="dataTable">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="SelectAll" /></th>
                        <th>STT</th>
                        <th>Ảnh đại diện</th>
                        <th>Tên nguyên liệu</th>
                        <th>Hiển thị</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        var i = 1;
                        foreach (var item in Model)
                        {

                            //var strCheck = item.IsActive ? "<i class = 'fa fa-check text-success'></i>" : "<i class = 'fa fa-times text-danger'></i>";

                            <tr id="trow_@item.Id">
                                <td><input type="checkbox" class="cbkItem" value="@item.Id" /></td>
                                <td class="stt-cell">@i</td>
                                <td><img src="@item.Image" width="100px" /></td>
                                <td>@item.Title</td>

                                <td>
                                    <label class="switch">
                                        <input type="checkbox" data-id="@item.Id" class="btnActive" @(item.IsActive ? "checked" : "") />
                                        <span class="slider round"></span>
                                    </label>
                                </td>

                                @*<td class="text-center">
                                       <a href='#' data-id="@item.Id" class="btnActive">@Html.Raw(strCheck) </a>
                                    </td>*@



                                <td>
                                    <a href="/admin/Matterials/edit/@item.Id" class="btn btn-sm btn-primary">Sửa</a>
                                    <a href="#" data-id="@item.Id" class="btn btn-sm btn-danger btnDelete">Xoá</a>
                                </td>
                            </tr>
                            i++;
                        }
                    }
                    @*else
                        {
                            <tr>
                                <td colspan="4">@Message.NoRecord</td>
                            </tr>
                        }*@
                </tbody>

            </table>


        </div>
        <!-- /.card-body -->
        <div class="card-footer">

        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->

@section scripts{
    <script>
        $(document).ready(function () {

            @*$('body').on('click', '#btnDeleteSelected', function (e) { // Hàm dùng để Xoá các mục đã chọn
                e.preventDefault();
                var str = "";
                var checkbox = $(this).parents('.card').find('tr td input:checkbox.cbkItem');
                var i = 0;
                var deletedIds = []; // Mảng lưu ID các mục đã xóa
                checkbox.each(function () {
                    if (this.checked) {
                        checkbox.attr('selected', 'checked');
                        var _id = $(this).val();
                        deletedIds.push(_id); // Thêm ID vào mảng
                        if (i === 0) {
                            str += _id;
                        }
                        else {
                            str += "," + _id;
                        }
                        i++;
                    }
                    else {
                        checkbox.attr('selected', '');
                    }
                });
                if (str.length > 0) {
                    var confirmMessage = confirm('@Message.ConfirmDeleteSelected');
                    if (confirmMessage === true) {
                        $.ajax({
                            url: '/admin/Matterials/deleteSelected',
                            type: 'POST',
                            data: { ids: str },
                            success: function (rs) {
                                if (rs.success) {
                                    location.reload();

                                    // Xóa các hàng trong bảng
                                    deletedIds.forEach(function (id) {
                                        $('#trow_' + id).remove();
                                    });

                                    // Cập nhật lại số thứ tự
                                    $('.stt-cell').each(function (index) {
                                        $(this).text(index + 1);
                                    });
                                }
                            }
                        });
                    }
                }
                else {
                    alert("@Message.RecordNotChecked")
                }
            });*@

            $('body').on('click', '#btnDeleteSelected', function (e) {
                e.preventDefault();
                var str = "";
                var checkbox = $(this).parents('.card').find('tr td input:checkbox.cbkItem');
                var i = 0;
                var deletedIds = []; // Mảng lưu ID các mục đã xóa
                checkbox.each(function () {
                    if (this.checked) {
                        checkbox.attr('selected', 'checked');
                        var _id = $(this).val();
                        deletedIds.push(_id); // Thêm ID vào mảng
                        if (i === 0) {
                            str += _id;
                        }
                        else {
                            str += "," + _id;
                        }
                        i++;
                    }
                    else {
                        checkbox.attr('selected', '');
                    }
                });
                if (str.length > 0) {
                    // Sử dụng SweetAlert 2 để hiển thị cửa sổ xác nhận thay vì confirm
                    Swal.fire({
                        title: '@Message.ConfirmDeleteSelected',
                        text: '',
                        icon: 'warning', // Loại biểu tượng (có thể là 'success', 'error', 'warning', 'info', v.v.)
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Xoá',
                        cancelButtonText: 'Hủy'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: '/admin/Matterials/deleteSelected',
                                type: 'POST',
                                data: { ids: str },
                                success: function (rs) {
                                    if (rs.success) {

                                        // Xóa các hàng trong bảng
                                        deletedIds.forEach(function (id) {
                                            $('#trow_' + id).remove();
                                        });

                                        // Cập nhật lại số thứ tự
                                        $('.stt-cell').each(function (index) {
                                            $(this).text(index + 1);
                                        });

                                        // Thông báo thành công sử dụng SweetAlert 2
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Thành công',
                                            text: '@Message.SuccessDeletedSelected',
                                            confirmButtonText: 'OK'
                                        });
                                    }
                                }
                            });
                        }
                    });
                }
                else {
                    // Sử dụng SweetAlert 2 thay thế cho alert
                    Swal.fire({
                        icon: 'warning',
                        title: 'Lỗi',
                        text: '@Message.RecordNotChecked',
                        confirmButtonText: 'OK'
                    });
                }
            });



            $('body').on('change', '#SelectAll', function () {  // Hàm dùng để check all
                var checkStatus = this.checked;
                var checkbox = $(this).parents('.card-body').find('tr td input:checkbox.cbkItem');
                checkbox.each(function () {
                    this.checked = checkStatus;
                    if (this.checked) {
                        checkbox.attr('selected', 'checked');
                    }
                    else {
                        checkbox.attr('selected', '');
                    }
                })
            });


            @*$('body').on('click', '.btnDelete', function () { // Hàm dùng để xoá item
                var id = $(this).data("id");
                var confirmMessage = confirm("@Message.ConfirmDelete");
                if (confirmMessage === true)
                {
                    $.ajax({
                        url: '/admin/Matterials/delete',
                        type: 'POST',
                        data: { id: id },
                        success: function (rs)
                        {
                            if (rs.success)
                            {
                                location.reload();

                                $('#trow_' + id).remove();
                                // Cập nhật lại STT
                                $('.stt-cell').each(function (index) {
                                    $(this).text(index + 1);
                                });
                            }
                        }
                    });
                }
            });*@

            $('body').on('click', '.btnDelete', function () {
                var id = $(this).data("id");

                // Sử dụng SweetAlert 2 để hiển thị cửa sổ xác nhận thay vì confirm
                Swal.fire({
                    title: '@Message.ConfirmDelete',
                    text: '',
                    icon: 'warning', // Loại biểu tượng (có thể là 'success', 'error', 'warning', 'info', v.v.)
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Xoá',
                    cancelButtonText: 'Hủy'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/admin/Matterials/delete',
                            type: 'POST',
                            data: { id: id },
                            success: function (rs) {
                                if (rs.success) {

                                    $('#trow_' + id).remove();

                                    // Cập nhật lại STT
                                    $('.stt-cell').each(function (index) {
                                        $(this).text(index + 1);
                                    });

                                    // Thông báo thành công sử dụng SweetAlert 2
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Thành công',
                                        text: 'Mục đã được xoá thành công!',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            }
                        });
                    }
                });
            });

            //$('body').on('click', '.btnActive', function (e) { // Hàm dùng để thay đổi trạng thái hiển thị
            //    e.preventDefault();
            //    var button = $(this); // Lưu giữ đối tượng button trong biến
            //    var id = button.data("id");
            //        $.ajax({
            //            url: '/admin/Matterials/IsActive',
            //            type: 'POST',
            //            data: { id: id },
            //            success: function (rs) {
            //                if (rs.success) {
            //                    if (rs.IsActive) {
            //                        button.html("<i class = 'fa fa-check text-success'></i>");
            //                    }
            //                    else {
            //                        button.html("<i class = 'fa fa-times text-danger'></i>");
            //                    }
            //                }
            //            }
            //        });
            //});

            $('body').on('change', '.btnActive', function () {
                //e.preventDefault();
                var checkbox = $(this);
                var id = checkbox.data("id");

                $.ajax({
                    url: '/admin/Matterials/IsActive',
                    type: 'POST',
                    data: { id: id },
                    success: function (rs) {
                        if (rs.success) {
                            if (rs.IsActive) {
                                checkbox.prop('checked', true);
                            } else {

                                checkbox.prop('checked', false);
                            }
                        }
                    }
                });
            });



        });
    </script>
}