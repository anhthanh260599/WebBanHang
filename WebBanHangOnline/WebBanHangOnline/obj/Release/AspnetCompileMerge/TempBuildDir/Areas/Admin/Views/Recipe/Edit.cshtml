@model IEnumerable<WebBanHangOnline.Models.EF.RecipeDetail>

@{
    ViewBag.Title = "Danh sách nguyên vật liệu";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/recipe" class="nav-link">Công thức</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Chỉnh sửa</a>
        </li>
    </ul>
}


<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Cập nhật công thức</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/recipe">Công thức</a></li>
                    <li class="breadcrumb-item active">Chỉnh sửa</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<div class="card">
    <div class="card-header">
        <h2 class="card-title text-bold">@ViewBag.Title</h2>

        <div class="card-tools">
            <button id="openPopup" class="btn btn-primary" href="#" data-toggle="modal" data-target="#myModal">
                Thêm nguyên vật liệu mới
            </button>
            <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                <i class="fas fa-minus"></i>
            </button>
        </div>
    </div>
    <div class="card-body">
        <div class="bs-stepper-content">

            <fieldset class="border p-4">
                <legend style="font-weight:600;" class="w-auto">Công thức món: @ViewBag.TitleProduct</legend>
                <table class="table">
                    <tr>
                        <th>
                            <label>Nguyên vật liệu</label>
                        </th>
                        <th>
                            <label>Số lượng</label>
                        @*</th>
                        <th>
                            <label>Đơn vị</label>
                        </th>*@
                        <th>
                            <label>Qui cách</label>
                        </th>
                        <th></th>
                    </tr>
                    @foreach (var item in Model)
                    {
                        <tr data-material="@item.MatterialID">
                            <td>
                                <span style="display:none" id="RecipeID">@item.RecipeID</span>
                                <span style="display:none" id="RecipeProductID">@item.RecipeProductID</span>
                                <span style="display:none" id="MatterialID">@item.MatterialID</span>
                                <span>@item.Matterial.Title</span>
                            </td>
                            <td>
                                <input type="text" class="form-control" id="Quantity" placeholder="Nhập số lượng" value="@item.Quantity" />
                                <span class="text-danger error-message"></span>
                            </td>
                            @*<td>
                                <input type="text" class="form-control" value="@item.Matterial.Unit" />
                            </td>*@
                            <td>
                                <input type="text" class="form-control" value="@item.Matterial.Packing" readonly />
                            </td>
                            <td>
                                <button class="btn btn-danger" id="btnDelete">Xóa</button>

                            </td>
                        </tr>
                    }
                    <tbody id="AddMaterials">
                    </tbody>


                </table>
            </fieldset>

            <button type="button" id="btnSubmit" class="btn btn-success">Cập nhật</button>

        </div>
    </div>
</div>

@*Form popup thêm nguyên vật liệu*@
<div id="myModal" tabindex="-1" class="modal fade">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-bold">Thêm nguyên vật liệu</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    @foreach (var material in ViewBag.ListMaterials as List<WebBanHangOnline.Models.EF.Matterial>)
                    {
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label>
                                    <input class="mr-3" type="checkbox" name="selectedMaterials" value="@material.Id" />
                                    <span id="NameMaterial">@material.Title</span> <br />
                                    <span class="text-danger error-message"></span>
                                </label>
                            </div>
                        </div>
                        <div class="col-sm-4" id="inputValueRecipe">
                            <div class="form-group">
                                <input type="number" class="form-control" placeholder="Nhập số lượng" min="0" />
                                <span class="text-danger error-message"></span>
                            </div>
                        </div>
                        @*<div class="col-sm-2" id="inputValueUnitRecipe">
                            <div class="form-group">
                                <input type="text" class="form-control" value="@material.Unit" readonly />
                            </div>
                        </div>*@
                        <div class="col-sm-2" id="inputValuePackingRecipe">
                            <div class="form-group">
                                <input type="text" class="form-control" value="@material.Packing" readonly />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="btnLuu" data-dismiss="modal">Lưu thay đổi</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section scripts {
    <script>
        let checkBoxs = document.querySelectorAll("input[name=selectedMaterials]") // lay ra het checkbox
        let btnLuu = document.querySelector("#btnLuu");
        let btnSubmit = document.querySelector("#btnSubmit");
        let btnDeletes = document.querySelectorAll("#btnDelete")
        let RecipeIDs = document.querySelectorAll("#RecipeID");
        let listDelete = [];
        let formAddRecipeDetail

        // Lấy form Recipe
        let recipeID = document.querySelector("#RecipeID");
        let recipeProductID = document.querySelector("#RecipeProductID");
        let formEditRecipe = {
            ID: parseInt(recipeID.textContent),
            ProductID: parseInt(recipeProductID.textContent)
        };

        // Xử lý delete những thuộc tính đã được lưu vào db
        Array.from(btnDeletes).forEach((button) => {
            button.onclick = (e) => {
                Swal.fire({
                    title: 'Xóa nguyên vật liệu?',
                    text: "Bạn sẽ không thể khôi phục",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Có, hãy xóa đi',
                    cancelButtonText: 'Hủy bỏ'
                }).then((result) => {
                    if (result.isConfirmed) {
                        let elementParent = button.closest("tr");
                        let matID = elementParent.dataset.material;
                        var postData = JSON.stringify({
                            recipeID: parseInt(recipeID.textContent),
                            recipeProductID: parseInt(recipeProductID.textContent),
                            matterialID: matID
                        })
                        let itemDelete = {
                            recipeID: parseInt(recipeID.textContent),
                            recipeProductID: parseInt(recipeProductID.textContent),
                            matterialID: matID
                        }
                        // Gọi Ajax
                        $.ajax({
                            type: "POST",
                            url: '/admin/Recipe/Delete',
                            data: postData,
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                if (response.success) {
                                    listDelete.push(itemDelete);
                                    elementParent.remove();
                                    Swal.fire(
                                        'Xóa thành công!',
                                        '',
                                        'success'
                                    )
                                }
                            }
                        })
                    }
                })
            }
        })
        // Xử lý error message khi nhấn vào checkbox và nhập vào thẻ input
        Array.from(checkBoxs).forEach((checkBox) => {
            let elementInputValueErrorMessage = checkBox.closest(".col-sm-4").nextElementSibling.querySelector(".error-message")
            checkBox.onchange = (e) => {
                if (!checkBox.checked) { // neu khong checked
                    elementInputValueErrorMessage.innerHTML = "";
                } else {
                    let elementInputChecked = checkBox.closest(".col-sm-4").nextElementSibling.querySelector("input")

                    if (elementInputChecked.value == 0) {
                        elementInputValueErrorMessage.innerHTML = "Vui lòng không để trống";
                    }
                    elementInputChecked.oninput = (e) => {
                        if (elementInputChecked.value == 0) {
                            elementInputValueErrorMessage.innerHTML = "Vui lòng không để trống";
                        } else {
                            elementInputValueErrorMessage.innerHTML = "";
                        }
                    }
                }
            }
        })

        // Nhấn vào nút lưu trong PopUp
        btnLuu.onclick = (e) => {
            let elementsCheckedBox = document.querySelectorAll("input[name=selectedMaterials]:checked")
            formAddRecipeDetail = null;
            if (elementsCheckedBox.length != 0) {
                Array.from(elementsCheckedBox).forEach((checkbox, index) => {
                    // Lấy ra element input value
                    let elementInputChecked = checkbox.closest(".col-sm-4").nextElementSibling.querySelector("input")
                    // Lấy ra element input value
                    let elementInputValueErrorMessage = checkbox.closest(".col-sm-4").nextElementSibling.querySelector(".error-message")
                    let nameMaterial = checkbox.closest(".col-sm-4").querySelector("#NameMaterial")
                    let elementUnit = checkbox.closest(".col-sm-4").nextElementSibling.nextElementSibling.querySelector("input")
                    let elementPacking = checkbox.closest(".col-sm-4").nextElementSibling.nextElementSibling.nextElementSibling.querySelector("input")


                    console.log(elementUnit.value)
                    console.log(elementPacking.value)

                    // Nếu input không trống
                    if (checkbox.checked && elementInputChecked.value != '') {
                        elementInputValueErrorMessage.innerHTML = "";

                        let itemDataRecipeDetail = {
                            NameMaterial: nameMaterial.textContent,
                            MatterialID: checkbox.value,
                            Quantity: elementInputChecked.value,
                            Unit: elementUnit.value,
                            Packing: elementPacking.value
                        }

                        if (!Array.isArray(formAddRecipeDetail)) {
                            formAddRecipeDetail = []; // Tạo mảng để lưu nhiều giá trị check box
                            formAddRecipeDetail.push(itemDataRecipeDetail);

                        } else {
                            formAddRecipeDetail.push(itemDataRecipeDetail);
                        }
                    }
                })
            } else {
                Swal.fire({
                    title: 'Thất bại',
                    text: "Bạn chưa chọn nguyên liệu nào",
                    icon: 'error',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Đồng ý'
                })
            }
            if (formAddRecipeDetail != undefined) {
                // render ra
                let elementAddMaterial = document.querySelector("#AddMaterials");
                // Gán lên HTML
                let htmlString = formAddRecipeDetail.reduce((html, data) => {
                    //elementAddMaterial.setAttribute('data-material', data.MatterialID)
                    let rowHtml = `
                                                    <tr data-material ="${data.MatterialID}">
                                                            <td>
                                                                <span> ${data.NameMaterial}</span>
                                                            </td>
                                                            <td>
                                                                <input type="text" class="form-control" id="Quantity" placeholder="Nhập số lượng" value="${data.Quantity}" />
                                                                <span class="text-danger error-message"></span>
                                                            </td>
                                                              <td>
                                                                 <input type="text" class="form-control" value="${data.Unit}" readonly />
                                                              </td>
                            <td>
                               <input type="text" class="form-control" value="${data.Packing}" readonly />
                            </td>
                                                            <td>
                                                                 <button class="btn btn-danger" id="btnDelete">Xóa</button>
                                                            </td>
                                                     </tr>`;
                    return html + rowHtml;
                }, '');
                elementAddMaterial.innerHTML = htmlString;

                // Những thuộc tính này chưa được lưu vào db nên chỉ cần xóa trên DOM
                let btnDeletesInPopup = elementAddMaterial.querySelectorAll("#btnDelete")
                Array.from(btnDeletesInPopup).forEach((button) => {
                    button.onclick = (e) => {
                        Swal.fire({
                            title: 'Xóa nguyên vật liệu?',
                            text: "Bạn sẽ không thể khôi phục",
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Có, hãy xóa đi',
                            cancelButtonText: 'Hủy bỏ'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                let divPopupRemove = button.closest("tr");
                                divPopupRemove.remove();
                                Swal.fire(
                                    'Xóa thành công!',
                                    '',
                                    'success'
                                )
                            }
                        })
                    }
                })

            } else {
                Swal.fire({
                    title: 'Thất bại',
                    text: "Bạn chưa chọn nguyên liệu nào",
                    icon: 'error',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Đồng ý'
                })
            }
        }

        //Xử lý submit
        btnSubmit.onclick = (e) => {
            let elementsInput = document.querySelectorAll("#Quantity");
            let isInputValid = true;

            // Xử lý kiểm tra input có null không
            Array.from(elementsInput).forEach((input) => {
                let errorMessage = input.nextElementSibling;
                if (input.value != "") {
                    errorMessage.innerHTML = ""
                } else {
                    isInputValid = false;
                    errorMessage.innerHTML = "Vui lòng không để trống"
                }
            })

            if (isInputValid) {
                // Lấy ra form dùng để edit
                let formValueEditRecipeDetail;
                Array.from(RecipeIDs).forEach((element) => {
                    let recipeProductID = element.parentElement.querySelector("#RecipeProductID").textContent;
                    let matterialID = element.parentElement.querySelector("#MatterialID").textContent;
                    let quantity = element.parentElement.nextElementSibling.querySelector("#Quantity")

                    let itemDataRecipeDetail = {
                        RecipeID: parseInt(element.textContent),
                        RecipeProductID: parseInt(recipeProductID),
                        MatterialID: parseInt(matterialID),
                        Quantity: quantity.value
                    }
                    if (!Array.isArray(formValueEditRecipeDetail)) {
                        formValueEditRecipeDetail = []; // Tạo mảng để lưu nhiều giá trị check box
                        formValueEditRecipeDetail.push(itemDataRecipeDetail);

                    } else {
                        formValueEditRecipeDetail.push(itemDataRecipeDetail);
                    }
                })
                //console.log(formEditRecipe);
                // Lọc các mục không có MatterialID giống nhau
                const uniqueMaterials = formValueEditRecipeDetail.filter(item => {
                    return !listDelete.some(deleteItem => deleteItem.matterialID == item.MatterialID);
                });
                let postData = JSON.stringify({
                    listEditRecipeDetail: uniqueMaterials,
                    listAddRecipeDetail: formAddRecipeDetail,
                    recipe: formEditRecipe
                });
                $.ajax({
                    type: "POST",
                    url: '/admin/Recipe/Edit',
                    data: postData,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        Swal.fire({
                            title: 'Thành công',
                            text: "Cập nhật thành công",
                            icon: 'success',
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'Đồng ý'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // Chuyển hướng sau khi SweetAlert được hiển thị
                                window.location.href = response.newUrl
                            }
                        })
                    }
                })
            } else {
                Swal.fire({
                    title: 'Thất bại',
                    text: "Bạn chưa nhập số lượng",
                    icon: 'error',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'Đồng ý'
                })
            }

        }
    </script>
}


