﻿@model WebBanHangOnline.Models.EF.Recipe

@{
    ViewBag.Title = "Thêm mới công thức";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
</style>

@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/recipe" class="nav-link">Công thức</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">Thêm mới</a>
        </li>
    </ul>
}


<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thêm mới công thức</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/recipe">Công thức</a></li>
                    <li class="breadcrumb-item active">Thêm mới</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>



<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">@ViewBag.Title</h3>

            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                    <i class="fas fa-minus"></i>
                </button>
            </div>
        </div>

        <div class="card-body">

            <div class="bs-stepper-content">
                @using (Html.BeginForm(FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    <!-- your steps content here -->
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputEmail1">Tên công thức</label>
                                @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Nhập tên công thức" })
                                @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputEmail1">Chọn sản phẩm</label>
                                @*@Html.DropDownListFor(x => x.Title, new { @class = "form-control", @placeholder = "Chọn sản phẩm" })*@
                                @Html.DropDownListFor(x => x.ProductID, ViewBag.ListProducts as SelectList, new { @class = "form-control searchable-dropdown-list", @id = "productDropdown" })
                                @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <label>Chọn nguyên vật liệu</label>
                        </div>
                        <div class="col-sm-2">
                            <label>Nhập số lượng</label>
                        </div>
                        @*<div class="col-sm-2">
                            <label>Đơn vị</label>
                        </div>*@
                        <div class="col-sm-2">
                            <label>Qui cách</label>
                        </div>
                    </div>
                    <div class="row">
                        @foreach (var material in ViewBag.ListMaterials as List<WebBanHangOnline.Models.EF.Matterial>)
                        {
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>
                                        <input class="mr-3" type="checkbox" name="selectedMaterials" value="@material.Id" />
                                        <span>@material.Title</span> <br />
                                        <span class="text-danger error-message"></span>
                                    </label>
                                </div>
                            </div>
                            <div class="col-sm-2">
                                <div class="form-group">
                                    <input type="number" class="form-control" placeholder="Nhập số lượng" min="0" />
                                    <span class="text-danger error-message"></span>
                                </div>
                            </div>
                            @*<div class="col-sm-2">
                                <div class="form-group">
                                    <input type="text" class="form-control" value="@material.Unit" readonly />
                                </div>
                            </div>*@
                            <div class="col-sm-2">
                                <div class="form-group">
                                    <input type="text" class="form-control" value="@material.Packing" readonly />
                                </div>
                            </div>
                        }
                    </div>
                    <div class="form-group">
                        <a href="/admin/Recipe" class="btn btn-danger">Quay lại</a>
                        <button type="button" id="btnSubmitRecipe" class="btn btn-primary">Xác nhận</button>
                    </div>
                }
            </div>

        </div>
        <!-- /.card-body -->
        <div class="card-footer">

        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->
<!-- /.content -->

<script>
    let btnSubmitRecipe = document.querySelector("#btnSubmitRecipe");
    let checkBoxs = document.querySelectorAll("input[name=selectedMaterials]") // lay ra het checkbox

    // Xử lý error message khi nhấn vào checkbox và nhập vào thẻ input
    Array.from(checkBoxs).forEach((checkBox) => {
        let elementInputValueErrorMessage = checkBox.closest(".col-sm-6").nextElementSibling.querySelector(".error-message")
        checkBox.onchange = (e) => {
            if (!checkBox.checked) { // neu khong checked
                elementInputValueErrorMessage.innerHTML = "";
            } else {
                let elementInputChecked = checkBox.closest(".col-sm-6").nextElementSibling.querySelector("input")

                if (elementInputChecked.value == 0) {
                    elementInputValueErrorMessage.innerHTML = "Vui lòng không để trống";
                }
                elementInputChecked.oninput = (e) => {
                    if (elementInputChecked.value == 0) {
                        elementInputValueErrorMessage.innerHTML = "Vui lòng không để trống";
                    } else {
                        elementInputValueErrorMessage.innerHTML = "";
                    }
                }
            }
        }
    })

    // Xử lý nhấn submit
    btnSubmitRecipe.onclick = e => {
        let elementsCheckedBox = document.querySelectorAll("input[name=selectedMaterials]:checked")
        let formValueRecipe;
        let formValueRecipeDetail;
        let isInputValue = true;
        /*formValueRecipeDetail = [];*/

        let productID = document.querySelector("#productDropdown").value
        let productName = document.querySelector("#Title").value

        // lấy thông tin của Recipe
        formValueRecipe = {
            ProductID: productID,
            Title: productName,
        }
        // Lập qua check box lấy thông tin của Recipe detail
        if (elementsCheckedBox.length != 0) {
            Array.from(elementsCheckedBox).forEach((checkbox, index) => {
                // Lấy ra element input value
                let elementInputChecked = checkbox.closest(".col-sm-6").nextElementSibling.querySelector("input")
                // Lấy ra element input value
                let elementInputValueErrorMessage = checkbox.closest(".col-sm-6").nextElementSibling.querySelector(".error-message")

                // Nếu input không trống
                if (checkbox.checked && elementInputChecked.value != '') {
                    elementInputValueErrorMessage.innerHTML = "";

                    let itemDataRecipeDetail = {
                        MatterialID: checkbox.value,
                        Quantity: elementInputChecked.value
                    }

                    /*formValueRecipeDetail.push(itemDataRecipeDetail);*/
                    if (!Array.isArray(formValueRecipeDetail)) {
                        formValueRecipeDetail = []; // Tạo mảng để lưu nhiều giá trị check box
                        formValueRecipeDetail.push(itemDataRecipeDetail);

                    } else {
                        formValueRecipeDetail.push(itemDataRecipeDetail);
                    }
                } else {
                    isInputValue = false;
                    elementInputValueErrorMessage.innerHTML = "Vui lòng không để trống";
                }
            })

        } else {
            Swal.fire({
                title: 'Thất bại',
                text: "Bạn chưa chọn nguyên liệu nào",
                icon: 'error',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Đồng ý'
            })
        }
        if (isInputValue == true) {
            // Gọi AJAX
            let postData = JSON.stringify({
                recipe: formValueRecipe,
                listRecipeDetail: formValueRecipeDetail
            });

            $.ajax({
                type: "POST",
                url: '/admin/Recipe/Add',
                data: postData,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    Swal.fire({
                        title: 'Thành công',
                        text: "Thêm thành công",
                        icon: 'success',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Đồng ý'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Chuyển hướng sau khi SweetAlert được hiển thị
                            window.location.href = response.newUrl
                        }
                    })
                }
            })
        } else {
            Swal.fire({
                title: 'Thất bại',
                text: "Bạn chưa nhập số lượng cho nguyên liệu",
                icon: 'error',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Đồng ý'
            })
        }
    }
</script>