@model WebBanHangOnline.Models.EF.Matterial

@{
    ViewBag.Title = "Cập nhật nguyên vật liệu";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader {
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/home" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/Matterials" class="nav-link">Nguyên liệu</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">@ViewBag.Title</a>
        </li>
    </ul>
}


<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>@ViewBag.Title</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/home">Trang chủ</a></li>
                    <li class="breadcrumb-item"><a href="/admin/Matterials">Nguyên liệu</a></li>
                    <li class="breadcrumb-item active">@ViewBag.Title</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Chi tiết nguyên vật liệu</h3>

            <div class="card-tools">

                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                    <i class="fas fa-minus"></i>
                </button>

            </div>
        </div>

        <div class="card-body">

            @if (Model != null)
            {
                <div class="bs-stepper-content">

                    @using (Html.BeginForm("Edit", "Matterials", FormMethod.Post, new { }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.CreateBy)
                        @Html.HiddenFor(x => x.CreateDate)

                        <!-- your steps content here -->
                    <div id="logins-part" class="content" role="tabpanel" aria-labelledby="logins-part-trigger">
                        <div class="form-group">
                            <label for="exampleInputEmail1">Tên tiêu đề</label>
                            @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Nhập tên tiêu đề" })
                            @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Mã nguyên liệu</label>
                            @Html.TextBoxFor(x => x.MattsCode, new { @class = "form-control", @placeholder = "Nhập mã" })
                            @Html.ValidationMessageFor(x => x.MattsCode, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Giá nguyên liệu</label>
                            @Html.HiddenFor(x => x.Price, new { @id = "PriceMats", @class = "form-control", @placeholder = "Nhập giá", @required = "true" })
                            <input id="textPriceMats" class="form-control" type="text" placeholder="Nhập giá" required />
                            @Html.ValidationMessageFor(x => x.Price, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputFile">Ảnh đại diện</label>
                            <div class="input-group">
                                <div class="custom-file">
                                    @Html.TextBoxFor(x => x.Image, new { @Id = "txtImage", @class = "form-control", @placeholder = "Chọn ảnh từ máy tính" })
                                </div>
                                <div class="input-group-append">
                                    <input type="button" value="Tải ảnh" onclick="BrowseServer('txtImage');" />
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Mô tả</label>
                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control" })
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Chi tiết</label>
                            @Html.TextAreaFor(x => x.Detail, new { @id = "txtDetail", @class = "form-control" })
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1">Hiển thị</label>
                            @Html.CheckBoxFor(x => x.IsActive)
                        </div>

                        @*<div class="form-group">
                            <label for="exampleInputPassword1">Số lượng</label>
                            @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control" })
                        </div>*@

                        <div class="form-group">
                            <label for="exampleInputPassword1">Quy cách</label>
                            @Html.TextBoxFor(x => x.Packing, new { @class = "form-control" })
                        </div>
                        @*@if (User.IsInRole("Admin"))
                        {
                            <div class="form-group">
                                <label for="exampleInputEmail1">Cửa hàng</label>
                                @Html.DropDownListFor(x => x.StoreID, ViewBag.StoreList as SelectList, "Tất cả cửa hàng", new { @class = "form-control searchable-dropdown-list" })
                                @Html.ValidationMessageFor(x => x.StoreID, null, new { @class = "text-danger" })
                            </div>
                        }*@
                        <div class="form-group">
                            <a href="/admin/Matterials" class="btn btn-danger">Quay lại</a>
                            <button type="submit" class="btn btn-primary">Xác nhận</button>
                        </div>
                    </div>

                    }
                </div>
            }

        </div>
        <!-- /.card-body -->
        <div class="card-footer">

        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->

@section scripts {
    <script>
        // Hàm để định dạng số thành chuỗi với dấu phẩy ngăn cách hàng nghìn
        function myFormatNumber(num) {
            return new Intl.NumberFormat('vi-VN').format(num);
        }

        // edit text price
        let hiddenForValue = document.querySelector("#PriceMats");
        let textPrice = document.getElementById("textPriceMats");

        textPrice.value = myFormatNumber(parseFloat(hiddenForValue.value)).replace('.',',') + " đ";
        textPrice.oninput = (e) => {
            let textPriceValue = parseFloat(textPrice.value.replaceAll(',', '').replace(" đ", ""));
            if (!isNaN(textPriceValue)) {
                // gán vào hiddenForValue
                hiddenForValue.value = textPriceValue;
                console.log(hiddenForValue.value);

                let textFormat = myFormatNumber(textPriceValue).replace('.', ',') + " đ";
                textPrice.value = textFormat;
            } else {
                textPrice.value = ''; // Đặt giá trị là rỗng nếu không thể chuyển đổi thành số
            }
        }
    </script>
    <script>
        $(document).ready(function () {
            CKEDITOR.replace('txtDetail', {
                customConfig: '/Content/ckeditor/config.js',
                extraAllowedContent: 'span',
            });
        });

        function BrowseServer(field) {
            var finder = new CKFinder();
            finder.selectActionFunction = function (fieldUrl) {
                document.getElementById(field).value = fieldUrl;
            };
            finder.popup();
        }
    </script>
}