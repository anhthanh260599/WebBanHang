@model WebBanHangOnline.Models.EF.Product
@using WebBanHangOnline.Models.Common
@{
    ViewBag.Title = "Cập nhật sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var Message = new WebBanHangOnline.Models.Common.Message();
}

@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin" class="nav-link">Trang chủ</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/products" class="nav-link">Sản phẩm</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="#" class="nav-link">@ViewBag.Title</a>
        </li>
    </ul>
}


<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thêm mới Sản phẩm</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Sản phẩm</a></li>
                    <li class="breadcrumb-item active">@ViewBag.Title</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Thông tin @ViewBag.Title</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.CreateDate)
                        <div class="card">
                            <div class="card-header p-2">
                                <ul class="nav nav-pills">
                                    <li class="nav-item"><a class="nav-link active" href="#activity" data-toggle="tab">Thông tin chung</a></li>
                                    @*<li class="nav-item"><a class="nav-link" href="#timeline" data-toggle="tab">Hình ảnh</a></li>*@
                                    <li class="nav-item"><a class="nav-link" href="#settings" data-toggle="tab">SEO</a></li>
                                </ul>
                            </div><!-- /.card-header -->
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="active tab-pane" id="activity">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Tên sản phẩm</label>
                                            @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @id = "nameProduct", @placeholder = "Tên sản phẩm" })
                                            @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Alias</label>
                                            @Html.TextBoxFor(x => x.Alias, new { @class = "form-control", @placeholder = "Alias" })
                                            @Html.ValidationMessageFor(x => x.Alias, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">SKU</label>
                                            @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control", @placeholder = "Mã mã phẩm" })
                                            @Html.ValidationMessageFor(x => x.ProductCode, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Danh mục</label>
                                            @Html.DropDownListFor(x => x.ProductCategoryID, ViewBag.listProductCategory as SelectList, new { @class = "form-control searchable-dropdown-list" })
                                            @Html.ValidationMessageFor(x => x.ProductCategoryID, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Mô tả</label>
                                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Mã mã phẩm" })
                                            @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Chi tiết sản phẩm</label>
                                            @Html.TextAreaFor(x => x.Detail, new { @class = "form-control", @id = "txtDetail" })
                                            @Html.ValidationMessageFor(x => x.Detail, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="row">
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Số lượng</label>
                                                    @Html.TextBoxFor(x => x.Quantity, new { @type = "number", @min = "1", @class = "form-control", @Value = "1", @requỉred = true })
                                                    @Html.ValidationMessageFor(x => x.Quantity, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Giá</label>
                                                    @Html.HiddenFor(x => x.Price, new { @class = "form-control", @placeholder = "Giá" })
                                                    <input id="textPriceProduct" class="form-control" type="text" placeholder="Giá" required />
                                                    @Html.ValidationMessageFor(x => x.Price, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Giá khuyến mãi</label>
                                                    @Html.HiddenFor(x => x.PriceSale, new { @class = "form-control", @placeholder = "Khuyến mãi" })
                                                    <input id="textPriceSale" class="form-control" type="text" placeholder="Giá" />
                                                    @Html.ValidationMessageFor(x => x.PriceSale, null, new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Giá nhập</label>
                                                    @Html.HiddenFor(x => x.OriginalPrice, new { @class = "form-control", @placeholder = "Giá nhập" })
                                                    <input id="textPriceOriginalPrice" class="form-control" type="text" placeholder="Giá" required />
                                                    @Html.ValidationMessageFor(x => x.OriginalPrice, null, new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            @if (User.IsInRole("Admin"))
                                            {
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Cửa hàng</label>
                                                    @Html.DropDownListFor(x => x.StoreID, ViewBag.StoreList as SelectList, "Tất cả cửa hàng", new { @class = "form-control searchable-dropdown-list" })
                                                    @Html.ValidationMessageFor(x => x.StoreID, null, new { @class = "text-danger" })
                                                </div>
                                            }

                                        </div>
                                        <div class="row">
                                            <div class="col-3">
                                                <div class="form-group">

                                                    <div class="custom-control custom-switch">
                                                        @Html.CheckBoxFor(x => x.IsActive, new { @class = "custom-control-input", @id = "IsActiveCheckbox", @checked = "checked" })
                                                        <label for="IsActiveCheckbox" class="custom-control-label">Hiển thị</label>
                                                    </div>


                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <div class="custom-control custom-switch">
                                                        @Html.CheckBoxFor(x => x.IsHot, new { @class = "custom-control-input", @id = "IsHotCheckbox" })
                                                        <label for="IsHotCheckbox" class="custom-control-label">Hot</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <div class="custom-control custom-switch">
                                                        @Html.CheckBoxFor(x => x.IsFeature, new { @class = "custom-control-input", @id = "IsFeatureCheckbox" })
                                                        <label for="IsFeatureCheckbox" class="custom-control-label">Nổi bật</label>
                                                    </div>
                                                </div>
                                            </div>
                                            @*<div class="col-3">
                                                <div class="form-group">
                                                    <div class="custom-control custom-switch">
                                                        @Html.CheckBoxFor(x => x.IsSale, new { @class = "custom-control-input", @id = "IsSaleCheckbox" })
                                                        <label for="IsSaleCheckbox" class="custom-control-label">Khuyến mãi</label>
                                                    </div>
                                                </div>
                                            </div>*@
                                        </div>
                                    </div>
                                    <!-- /.tab-pane -->
                                    @*<div class="tab-pane" id="timeline">
                                            <div class="row">
                                                <div class="col-md-12 text-right">
                                                    <input type="button" class="btn btn-primary" id="iTaiAnh" onclick="BrowseServer();" value="Tải ảnh" />
                                                </div>
                                                <div class="col-md-12">
                                                    <table class="table table-hover" id="tbAnhSanPham">
                                                        <thead>
                                                            <tr>
                                                                <th class="text-center">#</th>
                                                                <th class="text-center">Ảnh</th>
                                                                <th class="text-center">Ảnh đại diện</th>
                                                                <th class="text-center">Thao tác</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody id="tbHtml">
                                                        </tbody>
                                                    </table>
                                                    <input type="hidden" id="tCurrentId" value="0" />
                                                </div>
                                            </div>
                                        </div>*@
                                    <!-- /.tab-pane -->

                                    <div class="tab-pane" id="settings">
                                        <form class="form-horizontal">
                                            <div class="form-group row">
                                                <label for="inputName" class="col-sm-2 col-form-label">SEO Title</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(x => x.SeoTitle, new { @class = "form-control", @placeholder = "SeoTitle" })
                                                    @Html.ValidationMessageFor(x => x.SeoTitle, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="inputEmail" class="col-sm-2 col-form-label">SeoKeywords</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(x => x.SeoKeywords, new { @class = "form-control", @placeholder = "SeoKeywords" })
                                                    @Html.ValidationMessageFor(x => x.SeoKeywords, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="inputName2" class="col-sm-2 col-form-label">SeoDescription</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(x => x.SeoDescription, new { @class = "form-control", @placeholder = "SeoDescription" })
                                                    @Html.ValidationMessageFor(x => x.SeoDescription, null, new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        </form>
                                    </div>
                                    <!-- /.tab-pane -->
                                </div>
                                <!-- /.tab-content -->
                            </div><!-- /.card-body -->
                            <div class="form-group">
                                <a href="/admin/products" class="btn btn-danger">Quay lại</a>
                                <button type="submit" class="btn btn-primary">Xác nhận</button>
                            </div>
                        </div> <!-- /.card -->
                    }
                </div>
            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">

        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->

@section  scripts{
    <script>
        // Hàm để định dạng số thành chuỗi với dấu phẩy ngăn cách hàng nghìn
        function myFormatNumber(num) {
            return new Intl.NumberFormat('vi-VN').format(num);

        }

        // Field Price
        let hiddenForValuePrice = document.querySelector("#Price");
        let textPrice = document.querySelector("#textPriceProduct");
        textPrice.value = myFormatNumber(parseFloat(hiddenForValuePrice.value)).replace('.', ',') + " đ";
        textPrice.oninput = (e) => {
            let textPriceValue = parseFloat(textPrice.value.replaceAll(',', '').replace(" đ", ""));
            if (!isNaN(textPriceValue)) {
                // gán vào hiddenForValue
                hiddenForValuePrice.value = textPriceValue;

                let textFormat = myFormatNumber(textPriceValue).replace('.', ',') + " đ";
                textPrice.value = textFormat;
            } else {
                textPrice.value = ''; // Đặt giá trị là rỗng nếu không thể chuyển đổi thành số
            }
        }

        // Field Original Price
        let hiddenForValueOriginalPrice = document.querySelector("#OriginalPrice");
        let textOriginalPrice = document.querySelector("#textPriceOriginalPrice");
        textOriginalPrice.value = myFormatNumber(parseFloat(hiddenForValueOriginalPrice.value)).replace('.', ',') + " đ";
        textOriginalPrice.oninput = (e) => {
            let textPriceValue = parseFloat(textOriginalPrice.value.replaceAll(',', '').replace(" đ", ""));
            if (!isNaN(textPriceValue)) {
                // gán vào hiddenForValue
                hiddenForValueOriginalPrice.value = textPriceValue;

                let textFormat = myFormatNumber(textPriceValue).replace('.', ',') + " đ";
                textOriginalPrice.value = textFormat;
            } else {
                textOriginalPrice.value = ''; // Đặt giá trị là rỗng nếu không thể chuyển đổi thành số
            }
        }

        // Field Price Sale
        let hiddenForValuePriceSale = document.querySelector("#PriceSale");
        let textPriceSale = document.querySelector("#textPriceSale");

        if (hiddenForValuePriceSale.value == '') {
            textPriceSale.value = '';
        } else {
            textPriceSale.value = myFormatNumber(parseFloat(hiddenForValuePriceSale.value)).replace('.', ',') + " đ";
        }

        textPriceSale.oninput = (e) => {
            let textPriceValue = parseFloat(textPriceSale.value.replaceAll(',', '').replace(" đ", ""));
            if (!isNaN(textPriceValue)) {
                // gán vào hiddenForValue
                hiddenForValuePriceSale.value = textPriceValue;
                let textFormat = myFormatNumber(textPriceValue).replace('.', ',') + " đ";
                textPriceSale.value = textFormat;
            } else {
                textPriceSale.value = ''; // Đặt giá trị là rỗng nếu không thể chuyển đổi thành số
                hiddenForValuePriceSale.value = '';
            }
        }


        $(document).ready(function () {
            CKEDITOR.replace('txtDetail', {
                customConfig: '/Content/ckeditor/config.js',
                extraAllowedContent: 'span',
            });
        });
    </script>
}